# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# TODO
# Make encrypted output go to file
# Read encrypted data to decrypt from said file
# Fix bugs thatll definitely occur (dont lie theyll happen)
# Fix bugs that occur when fixing bugs
# Add feature to export private and public keys
# Fix more bugs

from PyQt5 import QtCore, QtGui, QtWidgets
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import binascii

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 291, 141))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Encrypt = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.Encrypt.setObjectName("Encrypt")
        self.verticalLayout.addWidget(self.Encrypt)
        self.Decrypt = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.Decrypt.setObjectName("Decrypt")
        self.verticalLayout.addWidget(self.Decrypt)
        self.SetPubKey = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.SetPubKey.setObjectName("SetPubKey")
        self.verticalLayout.addWidget(self.SetPubKey)
        self.GenKeys = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.GenKeys.setObjectName("GenKeys")
        self.verticalLayout.addWidget(self.GenKeys)
        self.ExportKeystoFile = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.ExportKeystoFile.setObjectName("ExportKeystoFile")
        self.verticalLayout.addWidget(self.ExportKeystoFile)
        self.ImportKeysFromFile = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.ImportKeysFromFile.setObjectName("ImportKeysFromFile")
        self.verticalLayout.addWidget(self.ImportKeysFromFile)
        self.Inouttext = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.Inouttext.setGeometry(QtCore.QRect(300, 0, 491, 541))
        self.Inouttext.setObjectName("Inouttext")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # Setting button actions
        self.GenKeys.clicked.connect(self.keygenner)
        self.SetPubKey.clicked.connect(self.setpublickey)
        self.Encrypt.clicked.connect(self.encryptor)
        self.Decrypt.clicked.connect(self.decryptor)
        self.ExportKeystoFile.clicked.connect(self.ExportKeyToFile)
        self.ImportKeysFromFile.clicked.connect(self.ImportKeyFromFile)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def SetOutText(self, Text):
        _translate = QtCore.QCoreApplication.translate
        self.Inouttext.setPlainText(_translate("MainWindow", Text))

    def ReadOutText(self):
        text = self.Inouttext.toPlainText()
        return text

    def keygenner(self):
        self.keys = RSA.generate(2048)
        self.pubkey = self.keys.publickey()
        self.pubkeyex = self.pubkey.exportKey(format='PEM')
        f = open("PubKey.pem", "wb")
        f.write(self.pubkey.exportKey("PEM"))
        f.close()
        self.SetOutText("Key.pem")

    def setpublickey(self):
        #Key = self.ReadOutText()
        filename = self.ReadOutText()
        f = open(filename, "rb")
        self.e_pubkey = RSA.import_key(f.read())
        f.close

    def encryptor(self):
        text = self.ReadOutText()
        encryptor_prgm = PKCS1_OAEP.new(self.e_pubkey)
        etext = text.encode("utf-8")
        encrypted = encryptor_prgm.encrypt(etext)
        f = open("encrypted", "wb")
        f.write(encrypted)
        f.close
        self.SetOutText("encrypted")

    def decryptor(self):
        filename = self.ReadOutText()
        data = open(filename, "rb").read()
        decryptor_prgm = PKCS1_OAEP.new(self.keys)
        decrypted = decryptor_prgm.decrypt(data)
        self.SetOutText(decrypted.decode("utf-8"))

    def ExportKeyToFile(self):
        filename = self.ReadOutText()
        f = open(f"{filename}.pem", "wb")
        f.write(self.keys.exportKey("PEM"))
        f.close

    def ImportKeyFromFile(self):
        filename = self.ReadOutText()
        Keys = open(filename, "rb").read()
        self.keys = RSA.import_key(Keys)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "RSA Encryption"))
        self.Encrypt.setText(_translate("MainWindow", "Encrypt"))
        self.Decrypt.setText(_translate("MainWindow", "Decrypt"))
        self.ExportKeystoFile.setText(_translate("MainWindow", "Export Keys to file"))
        self.ImportKeysFromFile.setText(_translate("MainWindow", "Import Keys from file"))
        self.SetPubKey.setText(_translate("MainWindow", "Set Pub Key from file"))
        self.GenKeys.setText(_translate("MainWindow", "Generate New Keys write pub to file: Key.pem"))
        self.Inouttext.setPlainText(_translate("MainWindow", "Paste your input here and it will be replaced with the output"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
